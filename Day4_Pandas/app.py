# M·ª•c ti√™u:
#
# Hi·ªÉu Pandas v√† c√°ch n√≥ gi√∫p x·ª≠ l√Ω d·ªØ li·ªáu AI hi·ªáu qu·∫£.
# Bi·∫øt c√°ch ƒë·ªçc, x·ª≠ l√Ω, l√†m s·∫°ch v√† tr·ª±c quan h√≥a d·ªØ li·ªáu v·ªõi Pandas.
# ·ª®ng d·ª•ng Pandas v√†o chu·∫©n b·ªã d·ªØ li·ªáu tr∆∞·ªõc khi hu·∫•n luy·ªán m√¥ h√¨nh AI.

'''
 Kh√°i ni·ªám c·∫ßn h·ªçc trong Pandas
üîπ Series & DataFrame ‚Äì Hai c·∫•u tr√∫c d·ªØ li·ªáu quan tr·ªçng trong Pandas.
üîπ ƒê·ªçc v√† ghi d·ªØ li·ªáu ‚Äì L√†m vi·ªác v·ªõi CSV, Excel, SQL, JSON.
üîπ Truy c·∫≠p v√† x·ª≠ l√Ω d·ªØ li·ªáu ‚Äì L·ªçc d·ªØ li·ªáu, x·ª≠ l√Ω missing values.
üîπ Th·ªëng k√™ d·ªØ li·ªáu ‚Äì T√≠nh trung b√¨nh, ph∆∞∆°ng sai, ƒë·ªô l·ªách chu·∫©n.
üîπ Chu·∫©n b·ªã d·ªØ li·ªáu cho m√¥ h√¨nh AI ‚Äì X·ª≠ l√Ω outlier, feature scaling, encoding.
'''
from uu import encode

import pandas as pd
import numpy as np
# import pandas as pd
#
# data = [10, 20, 30, 40]
# series = pd.Series(data, name="Gi√° tr·ªã")
# print(series)

#this is a dictionary, key = column labels, value = column value with DataFrame => n-dimensional
# data = {
#     "T√™n": ["Alice", "Bob", "Charlie"],
#     "Tu·ªïi": [25,30,35],
#     "L∆∞∆°ng": [5000, 6000, 7600]
# }
# df = pd.DataFrame(data)
# print(df)
# T·∫°o DataFrame m·∫´u
data = {
    "Ten": ["Alice", "Bob", "Charlie", "David"],
    "Luong": [5000, 7000, np.nan, 8000]
}
df = pd.DataFrame(data)

# L·ªçc d·ªØ li·ªáu: ch·ªâ l·∫•y ng∆∞·ªùi c√≥ l∆∞∆°ng > 6000
filtered_df = df[df["Luong"] > 6000]
print("Ng∆∞·ªùi c√≥ l∆∞∆°ng > 6000:\n", filtered_df)

# X·ª≠ l√Ω missing values: ƒëi·ªÅn b·∫±ng gi√° tr·ªã trung b√¨nh
df["Luong"] = df["Luong"].fillna(df["Luong"].mean())
print("\nDataFrame sau khi x·ª≠ l√Ω missing values:\n", df)


#B√†i t·∫≠p 5: Chu·∫©n b d·ªØ li·ªáu cho m√¥ h√¨nh AI
# Chu·∫©n h√≥a d·ªØ li·ªáu l∆∞∆°ng v·ªÅ kho·∫£ng [0,1] b·∫±ng Min-Max Scailing
#Chuyeen cot ten th√†nh s·ªë Label Encoding
from sklearn.preprocessing import MinMaxScaler, LabelEncoder

#Chu·∫©n h√≥a cot luong
scaler = MinMaxScaler()
df["Luong_scaled"] = scaler.fit_transform(df[["Luong"]])
# df["L∆∞∆°ng"] ‚Üí Tr·∫£ v·ªÅ Series (m·∫£ng 1D) ‚õî MinMaxScaler y√™u c·∫ßu m·∫£ng 2D
# df[["L∆∞∆°ng"]] ‚Üí Tr·∫£ v·ªÅ DataFrame (m·∫£ng 2D) ‚úÖ ƒê√∫ng ƒë·ªãnh d·∫°ng

#Encoding c·ªôt T√™n
encoder = LabelEncoder()
df["Ten_encoded"] = encoder.fit_transform(df["Ten"])
print("\nDataFrame sau khi chu·∫©n b·ªã d·ªØ li·ªáu\n", df)

#Self l√† tham s·ªë b·∫Øt bu√¥·ªôc khi ƒë·ªãnh nghƒ©a method trong c√°c Class/Object